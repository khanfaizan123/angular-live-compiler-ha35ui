{"ast":null,"code":"import { Compiler, CompilerFactory, COMPILER_OPTIONS } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { AppComponent } from './app.component';\nimport { JitCompilerFactory } from '@angular/platform-browser-dynamic';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; // Import BrowserAnimationsModule\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { WorkoutService } from './services/workout.service';\nimport * as i0 from \"@angular/core\";\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [WorkoutService, {\n      provide: COMPILER_OPTIONS,\n      useValue: {},\n      multi: true\n    }, {\n      provide: CompilerFactory,\n      useClass: JitCompilerFactory,\n      deps: [COMPILER_OPTIONS]\n    }, {\n      provide: Compiler,\n      useFactory: createCompiler,\n      deps: [CompilerFactory]\n    }, WorkoutService, {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: {\n        floatLabel: 'always'\n      }\n    }],\n    imports: [BrowserModule, FormsModule, MatButtonModule, MatPaginatorModule, ReactiveFormsModule, MatFormFieldModule, MatInputModule, MatSelectModule, MatTableModule, BrowserAnimationsModule]\n  });\n  return AppModule;\n})();\nexport function createCompiler(compilerFactory) {\n  return compilerFactory.createCompiler();\n}","map":null,"metadata":{},"sourceType":"module"}