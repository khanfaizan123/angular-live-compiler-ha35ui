{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Compiler, CompilerFactory, COMPILER_OPTIONS, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { WorkoutFormComponent } from './components/workout-form/workout-form.component';\nimport { WorkoutListComponent } from './components/workout-list/workout-list.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { AppComponent } from './app.component';\nimport { JitCompilerFactory } from '@angular/platform-browser-dynamic';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; // Import BrowserAnimationsModule\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { WorkoutService } from './services/workout.service';\nimport { HelloComponent } from './hello.component';\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  imports: [BrowserModule, FormsModule, MatButtonModule, MatPaginatorModule, ReactiveFormsModule, MatFormFieldModule, MatInputModule, MatSelectModule, MatTableModule, BrowserAnimationsModule],\n  declarations: [AppComponent, HelloComponent, WorkoutListComponent, WorkoutFormComponent],\n  bootstrap: [AppComponent],\n  providers: [WorkoutService, {\n    provide: COMPILER_OPTIONS,\n    useValue: {},\n    multi: true\n  }, {\n    provide: CompilerFactory,\n    useClass: JitCompilerFactory,\n    deps: [COMPILER_OPTIONS]\n  }, {\n    provide: Compiler,\n    useFactory: createCompiler,\n    deps: [CompilerFactory]\n  }, WorkoutService, {\n    provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n    useValue: {\n      floatLabel: 'always'\n    }\n  }]\n})], AppModule);\nexport { AppModule };\nexport function createCompiler(compilerFactory) {\n  return compilerFactory.createCompiler();\n}","map":null,"metadata":{},"sourceType":"module"}