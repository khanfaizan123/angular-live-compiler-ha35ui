{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/workout.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/material/core\";\n\nfunction WorkoutFormComponent_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Username is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction WorkoutFormComponent_mat_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const type_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r5);\n  }\n}\n\nfunction WorkoutFormComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Workout Type is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction WorkoutFormComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Workout Minutes are required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction WorkoutFormComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Workout Minutes must be at least 1 \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let WorkoutFormComponent = /*#__PURE__*/(() => {\n  class WorkoutFormComponent {\n    constructor(fb, workoutService) {\n      this.fb = fb;\n      this.workoutService = workoutService;\n      this.workoutTypes = ['Running', 'Cycling', 'Swimming', 'Yoga'];\n      this.workoutForm = this.fb.group({\n        name: ['', Validators.required],\n        type: ['Running', Validators.required],\n        minutes: [0, [Validators.required, Validators.min(1)]]\n      });\n    }\n\n    ngOnInit() {}\n\n    onSubmit() {\n      if (this.workoutForm.valid) {\n        const {\n          name,\n          type,\n          minutes\n        } = this.workoutForm.value;\n        const newUser = {\n          id: Date.now(),\n          name,\n          workouts: [{\n            type,\n            minutes\n          }]\n        };\n        this.workoutService.addUser(newUser); //this.workoutForm.reset();\n\n        this.workoutForm.reset({\n          name: null,\n          type: 'All',\n          minutes: 1\n        }, {\n          emitEvent: false,\n          onlySelf: false\n        });\n        this.workoutForm.markAsPristine();\n        this.workoutForm.markAsUntouched();\n      }\n    }\n\n  }\n\n  WorkoutFormComponent.ɵfac = function WorkoutFormComponent_Factory(t) {\n    return new (t || WorkoutFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.WorkoutService));\n  };\n\n  WorkoutFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WorkoutFormComponent,\n    selectors: [[\"app-workout-form\"]],\n    decls: 20,\n    vars: 6,\n    consts: [[2, \"display\", \"flex\", \"gap\", \"1rem\", \"flex-flow\", \"wrap\", 3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"formControlName\", \"name\"], [4, \"ngIf\"], [\"formControlName\", \"type\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"formControlName\", \"minutes\", \"type\", \"number\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 2, \"height\", \"fit-content\"], [3, \"value\"]],\n    template: function WorkoutFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function WorkoutFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"mat-form-field\", 1)(2, \"mat-label\");\n        i0.ɵɵtext(3, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵtemplate(5, WorkoutFormComponent_mat_error_5_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-form-field\", 1)(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Workout Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-select\", 4);\n        i0.ɵɵtemplate(10, WorkoutFormComponent_mat_option_10_Template, 2, 2, \"mat-option\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, WorkoutFormComponent_mat_error_11_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-form-field\", 1)(13, \"mat-label\");\n        i0.ɵɵtext(14, \"Workout Minutes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 6);\n        i0.ɵɵtemplate(16, WorkoutFormComponent_mat_error_16_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵtemplate(17, WorkoutFormComponent_mat_error_17_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 7);\n        i0.ɵɵtext(19, \"Add Workout\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.workoutForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.workoutForm.get(\"name\").hasError(\"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.workoutTypes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.workoutForm.get(\"type\").hasError(\"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.workoutForm.get(\"minutes\").hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.workoutForm.get(\"minutes\").hasError(\"min\"));\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i4.MatButton, i1.FormGroupDirective, i1.FormControlName, i5.MatError, i5.MatFormField, i5.MatLabel, i6.MatInput, i7.MatSelect, i8.MatOption],\n    styles: [\".required-asterisk[_ngcontent-%COMP%]:after{content:\\\" *\\\";color:red}\"]\n  });\n  return WorkoutFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}